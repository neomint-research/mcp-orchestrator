{
  "name": "memory-agent",
  "version": "1.0.0",
  "description": "MCP Memory Agent - Provides persistent graph-based knowledge storage and retrieval with relationship management",
  "type": "mcp-server",
  "author": "NEOMINT Research",
  "license": "MIT",
  "main": "backend/index.js",
  "mcp": {
    "server": {
      "name": "memory-agent",
      "version": "1.0.0",
      "protocol": "http",
      "port": 3002,
      "endpoints": {
        "initialize": "/mcp",
        "tools": "/mcp",
        "health": "/health"
      }
    },
    "capabilities": {
      "tools": {
        "store_knowledge": {
          "description": "Store knowledge in the graph-based memory system",
          "inputSchema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Unique identifier for the knowledge item"
              },
              "content": {
                "type": "string",
                "description": "The knowledge content to store"
              },
              "metadata": {
                "type": "object",
                "description": "Additional metadata for the knowledge item",
                "properties": {
                  "type": { "type": "string" },
                  "category": { "type": "string" },
                  "tags": { "type": "array", "items": { "type": "string" } },
                  "source": { "type": "string" },
                  "confidence": { "type": "number", "minimum": 0, "maximum": 1 }
                }
              },
              "ttl": {
                "type": "number",
                "description": "Time to live in seconds (optional)"
              }
            },
            "required": ["key", "content"]
          }
        },
        "query_knowledge": {
          "description": "Query knowledge from the memory system",
          "inputSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "description": "Search query or key to look for"
              },
              "type": {
                "type": "string",
                "description": "Type of search: 'exact', 'fuzzy', 'semantic', or 'graph'",
                "enum": ["exact", "fuzzy", "semantic", "graph"],
                "default": "fuzzy"
              },
              "limit": {
                "type": "number",
                "description": "Maximum number of results to return",
                "default": 10,
                "minimum": 1,
                "maximum": 100
              },
              "includeMetadata": {
                "type": "boolean",
                "description": "Include metadata in results",
                "default": true
              },
              "includeRelationships": {
                "type": "boolean",
                "description": "Include relationship information",
                "default": false
              }
            },
            "required": ["query"]
          }
        },
        "create_relationship": {
          "description": "Create a relationship between two knowledge items",
          "inputSchema": {
            "type": "object",
            "properties": {
              "fromKey": {
                "type": "string",
                "description": "Key of the source knowledge item"
              },
              "toKey": {
                "type": "string",
                "description": "Key of the target knowledge item"
              },
              "relationshipType": {
                "type": "string",
                "description": "Type of relationship (e.g., 'related_to', 'depends_on', 'part_of')"
              },
              "strength": {
                "type": "number",
                "description": "Strength of the relationship (0.0 to 1.0)",
                "minimum": 0,
                "maximum": 1,
                "default": 0.5
              },
              "metadata": {
                "type": "object",
                "description": "Additional metadata for the relationship"
              }
            },
            "required": ["fromKey", "toKey", "relationshipType"]
          }
        },
        "get_context": {
          "description": "Get contextual information around a knowledge item including related items",
          "inputSchema": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "Key of the knowledge item to get context for"
              },
              "depth": {
                "type": "number",
                "description": "Depth of relationships to traverse",
                "default": 2,
                "minimum": 1,
                "maximum": 5
              },
              "relationshipTypes": {
                "type": "array",
                "description": "Filter by specific relationship types",
                "items": { "type": "string" }
              },
              "includeContent": {
                "type": "boolean",
                "description": "Include full content of related items",
                "default": true
              }
            },
            "required": ["key"]
          }
        }
      }
    }
  },
  "docker": {
    "labels": {
      "mcp.server": "true",
      "mcp.server.name": "memory-agent",
      "mcp.server.port": "3002",
      "mcp.server.protocol": "http"
    }
  },
  "dependencies": {
    "fs": "builtin",
    "path": "builtin",
    "crypto": "builtin"
  },
  "keywords": [
    "mcp",
    "memory",
    "knowledge",
    "graph",
    "agent",
    "storage",
    "neomint"
  ]
}
